# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  build:
    runs-on: windows-latest

    strategy:
      matrix:
        node-version: [12.x, 14.x, 16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm i
    - run: npm ci
    - run: npm install --save-dev jest
    - run: npm run build --if-present
    - run: npm test

  test:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - run: pip install --upgrade robotframework-selenium2library
    - name: Robot Framework
      uses: joonvena/robotframework-docker-action@v1.0
      env:
        BROWSER: chrome
      with:
        robot_tests_dir: /test
    - name: Upload test results
      uses: actions/upload-artifact@v1
      if: always()
      with:
        name: reports
        path: ${{ github.workspace }}/test/robot-output

  generate_report:
    if: always()
    needs: [test] 
    runs-on: ubuntu-latest
    steps:
    - name: Download reports
      uses: actions/download-artifact@v1
      with:
        name: reports
    - name: Send report to commit
      uses: joonvena/robotframework-reporter-action@v1.0
      env:
        GH_ACCESS_TOKEN: ${{ secrets.TOKEN }}
        REPO_OWNER: ${{ env.REPOSITORY_OWNER }}
        COMMIT_SHA: ${{ github.sha }}
        REPOSITORY: ${{ env.REPOSITORY_NAME }}
        REPORT_PATH: test/robot-output

  deploy:
    needs: [build, test]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - uses: akhileshns/heroku-deploy@v3.12.12
      with:
        heroku_api_key: ${{secrets.HEROKU_API_KEY}}
        heroku_app_name: "robotel-stsweng-teamrobot"
        heroku_email: "adrian.jerez1110@gmail.com"